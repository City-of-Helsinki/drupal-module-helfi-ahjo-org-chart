<?php
use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_entity_form_display_alter().
 */
function helfi_ahjo_entity_form_display_alter(EntityFormDisplayInterface $form_display, array $context)
{
  if ($context['entity_type'] == 'taxonomy_term' && $context['form_mode'] == 'default') {
    $form_display
      ->setComponent('field_external_id', [
        'region' => 'content',
      ])
      ->setComponent('field_external_parent_id', [
        'region' => 'content',
      ]);
  }
}

/**
 * Implements hook_theme().
 */
function helfi_ahjo_theme($existing, $type, $theme, $path) {
  return [
    'hierarchical_taxonomy_tree' => [
      'variables' => [
        'menu_tree' => [],
        'route_tid' => NULL,
        'vocabulary' => NULL,
        'current_depth' => 0,
        'max_depth' => 0,
        'collapsible' => NULL,
      ],
    ],
  ];

}

/**
 * Implements hook_cron().
 */
function helfi_ahjo_cron() {
  /** @var int $last_run */
  $last_run = \Drupal::state()->get('helfi_gredi_image.last_run', 0);
  /** @var int $request_time */
  $request_time = \Drupal::time()->getRequestTime();
  // If 60 minutes passed since last time.
  if (($request_time - $last_run) > 60 * 60 * 24) {
    $jsonFile = Json::decode(file_get_contents(
      \Drupal::service('extension.list.module')->getPath('helfi_ahjo')
      . '/helsinkiorgchartesimerkki.json'));

    $queue = \Drupal::queue('sote_section_update');
    foreach ($jsonFile as $section) {
      $queue->createItem($section);


    }

  }
}
